Nine ways to create Stream.

1. collection.stream()
Collection<String> collection = Arrays.asList("a1", "a2", "a3");
Stream<String> streamFromCollection = collection.stream();

2. Stream.of(value1, value2,… valueN)
Stream<String> streamFromValues = Stream.of("a1", "a2", "a3");

3. Arrays.stream(array)
String[] array = {"a1", "a2", "a3"};                     
Stream<String> streamFromArrays = Arrays.stream(array);

4. Files.lines(path_to_file), each String in file will be separate element 
in the stream.
Stream<String> streamFromFiles = Files.lines(Paths.get("file.txt"))

5. "String".chars() 
IntStream streamFromString = "123".chars()

6. Stream.builder().add(...)....build()
Stream.builder().add("a1").add("a2").add("a3").build()

7. collection.parallelStream()
Stream<String> stream = collection.parallelStream();

8. create infinity stream
Stream.iterate(initial_condition, generation_expression)
Stream<Integer> streamFromIterate = Stream.iterate(1, n -> n + 1)
this expression create values: 1, 2, 3, 4,… N. 

9. Stream.generate(generation_expression)
Stream<String> streamFromGenerate = Stream.generate(() -> "a1")
this expression generate inifinity amount of value "a1"
Stream<String> streamFromGenerate = Stream.generate(() -> "a1");
System.out.println("streamFromGenerate = " + streamFromGenerate.limit(3).collect(Collectors.toList()));